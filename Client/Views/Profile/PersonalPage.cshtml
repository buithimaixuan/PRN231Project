@model Client.DTOs.PersonalPageDTO
@using Client.DTOs
@using Microsoft.AspNetCore.Http;
@using System.Net.Http.Headers
@using Newtonsoft.Json
@using System.Text.Json
@inject IHttpContextAccessor HttpContextAccessor
@{
    var isLoggedIn = ViewBag.IsLoggedIn as bool? ?? false;
    var accountIDLogin = ViewBag.AccountIDLogin as int?;

    if (Model != null && Model.accountDTO != null)
    {
        ViewData["Title"] = Model.accountDTO.FullName;
    }
    else
    {
        ViewData["Title"] = "Personal Page";
    }

    // Kiểm tra trạng thái quan hệ
    bool isOwnProfile = accountIDLogin.HasValue && Model != null && Model.accountDTO != null && accountIDLogin.Value == Model.accountDTO.AccountId;
    bool isFriend = Model != null && Model.listFriends != null && Model.listFriends.Any(f => (f.SenderId == accountIDLogin && f.ReceiverId == Model.accountDTO.AccountId) || (f.SenderId == Model.accountDTO.AccountId && f.ReceiverId == accountIDLogin));
    bool hasSentRequest = Model != null && Model.friendRequestReceivers != null && Model.friendRequestReceivers.Any(fr => fr.SenderId == accountIDLogin && fr.ReceiverId == Model.accountDTO.AccountId && fr.RequestStatus == "pending");
    bool hasReceivedRequest = Model != null && Model.friendRequestSenders != null && Model.friendRequestSenders.Any(fr => fr.SenderId == Model.accountDTO.AccountId && fr.ReceiverId == accountIDLogin && fr.RequestStatus == "pending");
}

<style>
    html,
    body,
    h1,
    h2,
    h3,
    h4,
    h5 {
        font-family: "Open Sans", sans-serif
    }
    /* Trường hợp 1 ảnh */
    .image-grid-1 img {
        width: 100%; /* Hiển thị ảnh rộng 100% */
    }

    /* Trường hợp 2 ảnh */
    .image-grid-2 {
        display: flex;
        justify-content: space-between;
    }

        .image-grid-2 img {
            width: 48%; /* Hiển thị 2 ảnh ngang hàng, mỗi ảnh chiếm 48% */
        }

    /* Trường hợp 3 ảnh */
    .image-grid-3 {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 10px;
    }

        .image-grid-3 img {
            width: 100%; /* 3 ảnh chia đều theo hàng */
        }

    /* Trường hợp 4 ảnh */
    .image-grid-4 {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
    }

        .image-grid-4 img {
            width: 100%; /* 4 ảnh chia thành 2x2 */
        }
</style>


@if (ViewBag.ErrorMessage != null)
{
    <p>Tai khonag khong ton tai hoac bi xoa roi</p>
}
else
{
    <div class="w3-theme-l5">
        <!-- Page Container -->
        <div class="w3-container w3-content" style="max-width:1400px;margin-top:30px; background-color: white">
            <!-- The Grid -->
            <div class="w3-row">
                <!-- Left Column -->
                <div class="w3-col m3">
                    <!-- accountDTO -->
                    <div class="w3-card w3-round w3-white pb-3">
                        <div class="w3-container">
                            <h4 class="w3-center">@Model.accountDTO.FullName </h4>
                            <p class="w3-center">
                                <img src="@Model.accountDTO.Avatar" class="w3-circle" style="height:106px;width:106px"
                                     alt="Avatar">
                            </p>
                            <div class="mt-3 text-center">
                                @if (Model.accountDTO.ShortBio != null && Model.accountDTO.ShortBio != "N/A")
                                {
                                    <p class="text-secondary mb-1">@Model.accountDTO.ShortBio</p>
                                }

                                @if (!isOwnProfile)
                                {
                                    @if (hasReceivedRequest)
                                    {
                                        <div class="w3-row w3-opacity">
                                            <div class="w3-half">
                                                <button type="button" class="w3-button w3-green w3-section px-3 py-1 request-btn"
                                                        data-sender-id="@Model.accountDTO.AccountId"
                                                        data-receiver-id="@accountIDLogin"
                                                        data-status="accepted" title="Accept">
                                                    <i class="fa fa-check"></i>
                                                </button>
                                            </div>
                                            <div class="w3-half">
                                                <button type="button" class="w3-button w3-red w3-section px-3 py-1 request-btn"
                                                        data-sender-id="@Model.accountDTO.AccountId"
                                                        data-receiver-id="@accountIDLogin"
                                                        data-status="rejected" title="Decline">
                                                    <i class="fa fa-remove"></i>
                                                </button>
                                            </div>
                                        </div>
                                    }
                                    else if (isFriend)
                                    {
                                        var friendRelation = Model.listFriends.FirstOrDefault(f =>
                                        (f.SenderId == accountIDLogin && f.ReceiverId == Model.accountDTO.AccountId) ||
                                        (f.SenderId == Model.accountDTO.AccountId && f.ReceiverId == accountIDLogin)
                                        );

                                        if (friendRelation != null)
                                        {
                                            <button type="button" class="btn btn-danger unfriend-btn"
                                                    data-user-id1="@accountIDLogin"
                                                    data-user-id2="@Model.accountDTO.AccountId">
                                                Unfriend
                                            </button>
                                        }
                                    }
                                    else if (hasSentRequest)
                                    {
                                        <button class="btn btn-secondary" disabled>Request Sent</button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-primary send-request-btn"
                                                data-sender-id="@accountIDLogin"
                                                data-receiver-id="@Model.accountDTO.AccountId">
                                            Add Friend
                                        </button>
                                    }
                                }

                            </div>
                            <hr>
                            @if (Model.accountDTO.Major != null && Model.accountDTO.Major != "N/A")
                            {
                                <p><i class="fa fa-pencil fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.Major</p>
                            }
                            @if (Model.accountDTO.Address != null && Model.accountDTO.Address != "N/A")
                            {
                                <p><i class="fa fa-home fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.Address</p>
                            }
                            @if (Model.accountDTO.Gender != null && Model.accountDTO.Gender != "N/A")
                            {
                                if (Model.accountDTO.Gender.ToLower() == "female")
                                {
                                    <p><i class="fa fa-venus  fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.Gender</p>
                                }
                                else if (Model.accountDTO.Gender.ToLower() == "male")
                                {
                                    <p><i class="fa fa-mars fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.Gender</p>
                                }
                                else
                                {
                                    <p><i class="fa fa-genderless fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.Gender</p>
                                }
                            }
                            @* @if (Model.accountDTO.DegreeUrl != null)
                        {
                            <p><i class="fa fa-home fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.DegreeUrl</p>
                        } *@
                            @if (Model.accountDTO.DateOfBirth != null)
                            {
                                <p><i class="fa fa-birthday-cake fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.DateOfBirth.Value.ToString("MMMM dd, yyyy")</p>
                            }
                            @if (Model.accountDTO.YearOfExperience != null)
                            {
                                <p><i class="fa fa-user-tie fa-fw w3-margin-right w3-text-theme"></i> @Model.accountDTO.YearOfExperience Year Of Experience</p>
                            }
                        </div>
                    </div>
                    <br>

                    <!-- Accordion -->
                    <div class="w3-card w3-round">
                        <div class="w3-white">
                            @if (Model.accountDTO.AccountId == accountIDLogin)
                            {
                                <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@Model.accountDTO.AccountId" asp-route-view="information" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                    <i class="fa fa-info-circle fa-fw w3-margin-right"></i> Information
                                </a>
                            }

                            <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@Model.accountDTO.AccountId" asp-route-view="posts" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                <i class="fa fa-pencil-alt fa-fw w3-margin-right"></i> Posts
                            </a>
                            <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@Model.accountDTO.AccountId" asp-route-view="friends" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                <i class="fa fa-user-friends fa-fw w3-margin-right"></i> Friends
                            </a>
                            <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@Model.accountDTO.AccountId" asp-route-view="photos" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                <i class="fa fa-picture-o fa-fw w3-margin-right"></i> Photos
                            </a>
                        </div>
                    </div>
                    <br>
                </div>

                <!-- Middle Column -->
                <div class="w3-col m7">
                    @if (ViewBag.ViewMode == "posts")
                    {
                        <!-- Hiển thị danh sách bài viết -->
                        @foreach (var post in Model.listPostDTOs)
                        {
                            var imageCount = post.postImages.Count();

                            <div class="w3-container w3-card w3-white w3-round w3-margin">
                                <br>
                                <a asp-page="/accountDTO/PersonalPages" asp-route-postid="@post.post.PostId">
                                    <img src="@Model.accountDTO.Avatar" alt="Avatar" class="w3-left w3-circle w3-margin-right" style="width:60px">
                                </a>
                                <div class="w3-right w3-opacity">
                                    <a asp-page="/Posts/UpdatePost" asp-route-postid="@post.post.PostId" class="updatePost controlPostBtn">
                                        Chỉnh sửa
                                    </a>
                                    <a class="deletePost controlPostBtn" asp-page="/Posts/DeletePost" asp-route-postid="@post.post.PostId" asp-page-handler="DeletePost" data-postid="@post.post.PostId" data-toggle="modal">Xóa</a>
                                </div>

                                <div class="activity--header">
                                    <p><a asp-page="/accountDTO/PersonalPage" asp-route-id="@Model.accountDTO.AccountId">@Model.accountDTO.FullName</a></p>
                                </div>
                                <div class="activity--meta fs--12">
                                    <p><i class="fa mr--8 fa-clock-o"></i>@post.post.CreatedAt</p>
                                </div>
                                <br />
                                <h5 class="m-0">
                                    @post.post.PostContent
                                </h5>
                                <hr class="mt-2 mb-2">
                                <div class="w3-row-padding" style="margin:0 -16px">
                                    <div class="@("image-grid-" + imageCount)">
                                        @foreach (var image in post.postImages)
                                        {
                                            <img src="@image.ImageUrl" alt="@image.ImageUrl" class="">
                                        }
                                    </div>
                                </div>

                                <div class="w3-margin-top">
                                    <div class="activity--action fw--700 w3-margin-bottom">
                                        <a asp-page="/Posts/PostDetail" asp-route-postId="@post.post.PostId">See More...</a>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Modal khi nhấn delete -->
                        <div id="deletePost" class="modal fade">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <form>
                                        <div class="modal-header">
                                            <h4 class="modal-title">Xóa bài đăng</h4>
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                        </div>
                                        <div class="modal-body">
                                            <p>Bạn có muốn xóa bài đăng này không?</p>
                                        </div>
                                        <div class="modal-footer">
                                            <input type="button" class="btn btn-default btnBack" data-dismiss="modal" value="Quay về">
                                            <a id="confirmDeletePost" class="btn btn-danger">Xóa</a>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                    else if (ViewBag.ViewMode == "friends")
                    {
                        <!-- Hiển thị danh sách bạn bè -->
                        <h2>Friends of @Model.accountDTO.FullName</h2>
                        @if (Model.listFriends.Any())
                        {
                            <div class="row">
                                @foreach (var friend in Model.listFriends)
                                {
                                    var friendId = friend.SenderId == Model.accountDTO.AccountId ? friend.ReceiverId : friend.SenderId;
                                    var friendInfo = await GetSenderInfo(friendId);

                                    <div class="col-md-4 mb-3">
                                        <div class="w3-card w3-round w3-white w3-center">
                                            <div class="w3-container">
                                                <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@friendId" class="d-flex justify-content-around align-items-center">
                                                    <img src="@(friendInfo?.Avatar ?? "~/image/avatar6.png")" alt="Avatar" class="w-25">
                                                    <span>@(friendInfo?.FullName ?? "Unknown User")</span>
                                                </a>
                                                @if (accountIDLogin == Model.accountDTO.AccountId)
                                                {
                                                    <form method="post" asp-action="Unfriend">
                                                        <input type="hidden" name="userId1" value="@accountIDLogin" />
                                                        <input type="hidden" name="userId2" value="@friendId" />
                                                        <button type="submit" class="btn btn-danger mt-2">Unfriend</button>
                                                    </form>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p>No friends found.</p>
                        }
                    }
                    else if (ViewBag.ViewMode == "photos")
                    {
                        <!-- Hiển thị danh sách ảnh -->
                        <h2>Photos of @Model.accountDTO.FullName</h2>
                        // Gọi API để lấy danh sách ảnh
                        var photosDTO = await GetPhotos(Model.accountDTO.AccountId);
                        @if (photosDTO != null && photosDTO.Photos.Any())
                        {
                            <p>Total Photos: @photosDTO.CountPhotos</p>
                            <div class="row">
                                @foreach (var photo in photosDTO.Photos)
                                {
                                    <div class="col-md-4 mb-3">
                                        <div class="w3-card w3-round w3-white w3-center">
                                            <div class="w3-container">
                                                <img src="@photo.ImageUrl" alt="@photo.ImageUrl" class="img-fluid" style="max-width: 100%; height: auto;" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p>No photos found.</p>
                        }
                    }
                    else if (ViewBag.ViewMode == "information")
                    {
                        <!-- Hiển thị thông tin cá nhân -->
                        <h2>Information of @Model.accountDTO.FullName</h2>
                        <div class="w3-container w3-card w3-white w3-round w3-margin">
                            <div class="w3-container">
                                @if (Model.accountDTO.Major != null && Model.accountDTO.Major != "N/A")
                                {
                                    <p><strong>Major:</strong> @Model.accountDTO.Major</p>
                                }
                                @if (Model.accountDTO.Address != null && Model.accountDTO.Address != "N/A")
                                {
                                    <p><strong>Address:</strong> @Model.accountDTO.Address</p>
                                }
                                @if (Model.accountDTO.Gender != null && Model.accountDTO.Gender != "N/A")
                                {
                                    <p><strong>Gender:</strong> @Model.accountDTO.Gender</p>
                                }
                                @if (Model.accountDTO.DateOfBirth != null)
                                {
                                    <p><strong>Date of Birth:</strong> @Model.accountDTO.DateOfBirth.Value.ToString("MMMM dd, yyyy")</p>
                                }
                                @if (Model.accountDTO.YearOfExperience != null)
                                {
                                    <p><strong>Years of Experience:</strong> @Model.accountDTO.YearOfExperience</p>
                                }
                                @if (Model.accountDTO.ShortBio != null && Model.accountDTO.ShortBio != "N/A")
                                {
                                    <p><strong>Bio:</strong> @Model.accountDTO.ShortBio</p>
                                }
                            </div>
                        </div>
                    }
                </div>
                <!-- End Middle Column -->
                @functions {
                private async Task<AccountDTO> GetSenderInfo(int senderId)
                {
                    try
                    {
                        using var client = new HttpClient();
                        var contentType = new MediaTypeWithQualityHeaderValue("application/json");
                        client.DefaultRequestHeaders.Accept.Add(contentType);
                        var authenUrl = "http://localhost:5157/api/Accounts";

                        var response = await client.GetAsync($"{authenUrl}/personal-page/{senderId}");
                        if (response.IsSuccessStatusCode)
                        {
                            var content = await response.Content.ReadAsStringAsync();
                            var profile = System.Text.Json.JsonSerializer.Deserialize<PersonalPageDTO>(content, new System.Text.Json.JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    });
                            return profile?.accountDTO;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Error fetching sender info: {ex.Message}");
                    }
                    return null;
                }

                private async Task<AccountPhotosDTO> GetPhotos(int accountId)
                {
                    try
                    {
                        using var client = new HttpClient();
                        var contentType = new MediaTypeWithQualityHeaderValue("application/json");
                        client.DefaultRequestHeaders.Accept.Add(contentType);
                        var authenUrl = "http://localhost:5157/api/Accounts";

                        var response = await client.GetAsync($"{authenUrl}/all-photos/{accountId}");
                        if (response.IsSuccessStatusCode)
                        {
                            var content = await response.Content.ReadAsStringAsync();
                            var photosDTO = System.Text.Json.JsonSerializer.Deserialize<AccountPhotosDTO>(content, new System.Text.Json.JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    });
                            return photosDTO;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Error fetching photos: {ex.Message}");
                    }
                    return null;
                }
            }
            <!-- End Middle Column -->

            <!-- Right Column -->
            <div class="w3-col m2">
                @if (accountIDLogin == Model.accountDTO.AccountId)
                    {
                        // Nếu vào trang cá nhân của chính mình -> Hiển thị danh sách yêu cầu kết bạn
                        if (Model.friendRequestReceivers.Count() > 0)
                        {
                            <div class="w3-card w3-round w3-white w3-center">
                                <div class="w3-container">
                                    <p>Friend Requests</p>
                                    @foreach (var f in Model.friendRequestReceivers)
                                    {
                                        <div class="friend-request-item" data-request-id="@f.RequestId">
                                            <p>SenderId: @f.SenderId, ReceiverId: @f.ReceiverId</p>
                                            <div class="w3-row w3-opacity">
                                                <div class="w3-half">
                                                    <button type="button" class="w3-button w3-green w3-section px-3 py-1 request-btn"
                                                            data-sender-id="@f.SenderId"
                                                            data-receiver-id="@f.ReceiverId"
                                                            data-status="accepted" title="Accept">
                                                        <i class="fa fa-check"></i>
                                                    </button>
                                                </div>
                                                <div class="w3-half">
                                                    <button type="button" class="w3-button w3-red w3-section px-3 py-1 request-btn"
                                                            data-sender-id="@f.SenderId"
                                                            data-receiver-id="@f.ReceiverId"
                                                            data-status="rejected" title="Decline">
                                                        <i class="fa fa-remove"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="message mt-2"></div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="w3-card w3-round w3-white w3-center">
                                <div class="w3-container">
                                    <p>Friend List</p>
                                    @if (Model.listFriends.Count() > 0)
                                    {
                                        @foreach (var f in Model.listFriends.Take(10).Reverse())
                                        {
                                            var friendId = f.SenderId == accountIDLogin ? f.ReceiverId : f.SenderId;
                                            var friendInfo = await GetSenderInfo(friendId);

                                            <div>
                                                <a class="d-flex justify-content-around align-items-center" href="@Url.Action("PersonalPage", "Profile", new { id = friendId })">
                                                    <img src="@(friendInfo?.Avatar ?? "~/image/avatar6.png")" alt="Avatar" class="w-25">
                                                    <span>@(friendInfo?.FullName ?? "Unknown User")</span>
                                                </a>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p>No friends yet.</p>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        // Nếu vào trang cá nhân của người khác -> Chỉ hiển thị danh sách bạn bè
                        <div class="w3-card w3-round w3-white w3-center">
                            <div class="w3-container">
                                <p>Friend List</p>
                                @if (Model.listFriends.Count() > 0)
                                {
                                    @foreach (var f in Model.listFriends.Take(10).Reverse())
                                    {
                                        var friendId = f.SenderId == Model.accountDTO.AccountId ? f.ReceiverId : f.SenderId;
                                        var friendInfo = await GetSenderInfo(friendId);

                                        <div>
                                            <a class="d-flex justify-content-around align-items-center" href="@Url.Action("PersonalPage", "Profile", new { id = friendId })">
                                                <img src="@(friendInfo?.Avatar ?? "~/image/avatar6.png")" alt="Avatar" class="w-25">
                                                <span>@(friendInfo?.FullName ?? "Unknown User")</span>
                                            </a>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No friends yet.</p>
                                }
                            </div>
                        </div>
                    }

                    <br>

                    <div class="w3-card w3-round w3-white w3-padding-32 w3-center">
                        <p><i class="fa fa-bug w3-xxlarge"></i></p>
                    </div>
                </div>
                <!-- End Grid -->
            </div>

            <!-- End Page Container -->
        </div>
    </div>
}
<div id="success-message" style="display:none;">@TempData["SuccessMessage"]</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var successMessage = document.getElementById('success-message').innerText;

            if (successMessage) {
                Swal.fire({
                    title: 'Alert',
                    text: successMessage,
                    icon: 'success',
                    confirmButtonText: 'OK'
                });
            }
        });
    </script>


    <script>
        $(document).ready(function () {
            function sendAjaxRequest(url, data, $button, successMessage) {
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        if (response && response.success) {
                            Swal.fire({
                                title: 'Success',
                                text: successMessage,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                            $button.closest('.friend-request-item, .w3-row').fadeOut(); // Ẩn phần tử sau khi xử lý
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: response.message || 'Something went wrong!',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: 'Error',
                            text: xhr.responseText || 'Unknown error',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            }

            // Chấp nhận hoặc từ chối lời mời kết bạn
            $('.request-btn').click(function () {
                var senderId = $(this).data('sender-id');
                var receiverId = $(this).data('receiver-id');
                var status = $(this).data('status');
                sendAjaxRequest('@Url.Action("UpdateFriendRequest", "Profile")',
                                { senderId: senderId, receiverId: receiverId, status: status },
                                $(this),
                                status === 'accepted' ? 'Friend request accepted!' : 'Friend request declined!');
            });

            // Gửi lời mời kết bạn
            $('.send-request-btn').click(function () {
                var senderId = $(this).data('sender-id');
                var receiverId = $(this).data('receiver-id');
                sendAjaxRequest('@Url.Action("SendFriendRequest", "Profile")',
                                { senderId: senderId, receiverId: receiverId },
                                $(this),
                                'Friend request sent!');
            });

            // Hủy kết bạn
            $('.unfriend-btn').click(function () {
                var userId1 = $(this).data('user-id1');
                var userId2 = $(this).data('user-id2');
                sendAjaxRequest('@Url.Action("Unfriend", "Profile")',
                                { userId1: userId1, userId2: userId2 },
                                $(this),
                                'Unfriended successfully!');
            });
        });

    </script>
}


