@model Client.ViewModel.PersonalPageViewModel
@using Client.DTOs
@using Microsoft.AspNetCore.Http;
@using System.Net.Http.Headers
@using Newtonsoft.Json
@using System.Text.Json
@inject IHttpContextAccessor HttpContextAccessor
@{
    var isLoggedIn = ViewBag.IsLoggedIn as bool? ?? false;
    var accountIdClaim = HttpContextAccessor.HttpContext?.User?.Claims.FirstOrDefault(c => c.Type == "AccountID");

    int accountIDLogin = 0; // Giá trị mặc định nếu không tìm thấy claim
    if (accountIdClaim != null && !string.IsNullOrEmpty(accountIdClaim.Value))
    {
        int.TryParse(accountIdClaim.Value, out accountIDLogin);
    }

    if (Model != null && Model.PersonalPageDTO.accountDTO != null)
    {
        ViewData["Title"] = Model.PersonalPageDTO.accountDTO.FullName;
    }
    else
    {
        ViewData["Title"] = "Personal Page";
    }

    // Kiểm tra trạng thái quan hệ
    bool isOwnProfile = Model?.PersonalPageDTO.accountDTO != null && accountIDLogin > 0 && accountIDLogin == Model.PersonalPageDTO.accountDTO.AccountId;
    bool isFriend = Model?.PersonalPageDTO.listFriends != null && Model.PersonalPageDTO.listFriends.Any(f =>
        (f.SenderId == accountIDLogin && f.ReceiverId == Model.PersonalPageDTO.accountDTO.AccountId) ||
        (f.SenderId == Model.PersonalPageDTO.accountDTO.AccountId && f.ReceiverId == accountIDLogin));

    bool hasSentRequest = Model?.PersonalPageDTO.friendRequestReceivers != null && Model.PersonalPageDTO.friendRequestReceivers.Any(fr =>
        fr.SenderId == accountIDLogin && fr.ReceiverId == Model.PersonalPageDTO.accountDTO.AccountId && fr.RequestStatus == "pending");

    bool hasReceivedRequest = Model?.PersonalPageDTO.friendRequestSenders != null && Model.PersonalPageDTO.friendRequestSenders.Any(fr =>
        fr.SenderId == Model.PersonalPageDTO.accountDTO.AccountId && fr.ReceiverId == accountIDLogin && fr.RequestStatus == "pending");

    Console.WriteLine("Model.PersonalPageDTO.PersonalPageDTO.accountDTO.AccountId: " + (Model?.PersonalPageDTO.accountDTO?.AccountId ?? 0));
    Console.WriteLine("accountIDLogin: " + accountIDLogin);
}



@if (ViewBag.ErrorMessage != null)
{
    <p>Account does not exist or deleted.</p>
}
else
{
    <div class="w3-theme-l5">
        <!-- Page Container -->
        <div class="w3-container w3-content" style="max-width:1400px;margin-top:30px; background-color: white">
            <!-- The Grid -->
            <div class="w3-row">
                <!-- Left Column -->
                <div class="w3-col m3">
                    <!-- accountDTO -->

                    <div class="w3-card w3-round w3-white pb-3">
                        <div class="w3-container">
                            <h4 class="w3-center">@Model.PersonalPageDTO.accountDTO.FullName</h4>
                            <p class="w3-center">
                                <img src="@Model.PersonalPageDTO.accountDTO.Avatar" class="w3-circle" style="height:106px;width:106px" alt="Avatar">
                            </p>
                            <div class="mt-3 text-center" id="friend-action-buttons">
                                @if (Model.PersonalPageDTO.accountDTO.ShortBio != null && Model.PersonalPageDTO.accountDTO.ShortBio != "N/A")
                                {
                                    <p class="text-secondary mb-1">@Model.PersonalPageDTO.accountDTO.ShortBio</p>
                                }

                                @if (!isOwnProfile)
                                {
                                    @if (hasReceivedRequest)
                                    {
                                        <div class="w3-row w3-opacity">
                                            <div class="w3-half">
                                                <button type="button" class="w3-button w3-green w3-section px-3 py-1 request-btn"
                                                data-sender-id="@Model.PersonalPageDTO.accountDTO.AccountId"
                                                data-receiver-id="@accountIDLogin"
                                                data-status="accepted" title="Accept">
                                                    <i class="fa fa-check"></i>
                                                </button>
                                            </div>
                                            <div class="w3-half">
                                                <button type="button" class="w3-button w3-red w3-section px-3 py-1 request-btn"
                                                data-sender-id="@Model.PersonalPageDTO.accountDTO.AccountId"
                                                data-receiver-id="@accountIDLogin"
                                                data-status="rejected" title="Decline">
                                                    <i class="fa fa-remove"></i>
                                                </button>
                                            </div>
                                        </div>
                                    }
                                    else if (isFriend)
                                    {
                                        var friendRelation = Model.PersonalPageDTO.listFriends.FirstOrDefault(f =>
                                        (f.SenderId == accountIDLogin && f.ReceiverId == Model.PersonalPageDTO.accountDTO.AccountId) ||
                                        (f.SenderId == Model.PersonalPageDTO.accountDTO.AccountId && f.ReceiverId == accountIDLogin)
                                        );

                                        if (friendRelation != null)
                                        {
                                            <button type="button" class="btn btn-danger unfriend-btn"
                                            data-user-id1="@accountIDLogin"
                                            data-user-id2="@Model.PersonalPageDTO.accountDTO.AccountId">
                                                Unfriend
                                            </button>
                                        }
                                    }
                                    else if (hasSentRequest)
                                    {
                                        <button class="btn btn-secondary" disabled>Request Sent</button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-primary send-request-btn"
                                        data-sender-id="@accountIDLogin"
                                        data-receiver-id="@Model.PersonalPageDTO.accountDTO.AccountId">
                                            Add Friend
                                        </button>
                                    }
                                }
                            </div>
                            <!-- Các thông tin khác -->
                            <hr>
                            @if (Model.PersonalPageDTO.accountDTO.Major != null && Model.PersonalPageDTO.accountDTO.Major != "N/A")
                            {
                                <p><i class="fa fa-pencil fa-fw w3-margin-right w3-text-theme"></i> @Model.PersonalPageDTO.accountDTO.Major</p>
                            }
                            @if (Model.PersonalPageDTO.accountDTO.Address != null && Model.PersonalPageDTO.accountDTO.Address != "N/A")
                            {
                                <p><i class="fa fa-home fa-fw w3-margin-right w3-text-theme"></i> @Model.PersonalPageDTO.accountDTO.Address</p>
                            }
                            @if (Model.PersonalPageDTO.accountDTO.Gender != null && Model.PersonalPageDTO.accountDTO.Gender != "N/A")
                            {
                                if (Model.PersonalPageDTO.accountDTO.Gender.ToLower() == "female")
                                {
                                    <p><i class="fa fa-venus  fa-fw w3-margin-right w3-text-theme"></i> @Model.PersonalPageDTO.accountDTO.Gender</p>
                                }
                                else if (Model.PersonalPageDTO.accountDTO.Gender.ToLower() == "male")
                                {
                                    <p><i class="fa fa-mars fa-fw w3-margin-right w3-text-theme"></i> @Model.PersonalPageDTO.accountDTO.Gender</p>
                                }
                                else
                                {
                                    <p><i class="fa fa-genderless fa-fw w3-margin-right w3-text-theme"></i> @Model.PersonalPageDTO.accountDTO.Gender</p>
                                }
                            }
                            @if (Model.PersonalPageDTO.accountDTO.DateOfBirth != null)
                            {
                                <p><i class="fa fa-birthday-cake fa-fw w3-margin-right w3-text-theme"></i> @Model.PersonalPageDTO.accountDTO.DateOfBirth.Value.ToString("MMMM dd, yyyy")</p>
                            }
                            @if (Model.PersonalPageDTO.accountDTO.YearOfExperience != null)
                            {
                                <p><i class="fa fa-user-tie fa-fw w3-margin-right w3-text-theme"></i> @Model.PersonalPageDTO.accountDTO.YearOfExperience Year Of Experience</p>
                            }
                        </div>
                    </div>
                    <br>

                    <!-- Accordion -->
                    <div class="w3-card w3-round">
                        <div class="w3-white">
                            @if (Model.PersonalPageDTO.accountDTO.AccountId == accountIDLogin)
                            {
                                <a asp-controller="Profile" asp-action="UpdateProfile" asp-route-id="@Model.PersonalPageDTO.accountDTO.AccountId" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                    <i class="fa fa-info-circle fa-fw w3-margin-right"></i> Information
                                </a>
                            }

                            <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@Model.PersonalPageDTO.accountDTO.AccountId" asp-route-view="posts" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                <i class="fa fa-pencil-alt fa-fw w3-margin-right"></i> Posts (@Model.PersonalPageDTO.listPostDTOs.Count())
                            </a>
                            <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@Model.PersonalPageDTO.accountDTO.AccountId" asp-route-view="friends" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                <i class="fa fa-user-friends fa-fw w3-margin-right"></i> Friends (@Model.PersonalPageDTO.listFriends.Count())
                            </a>
                            @{
                               
                                var photosDTO = await GetPhotos(Model.PersonalPageDTO.accountDTO.AccountId ?? 0);
                            }
                            <a asp-controller="Profile" asp-action="PersonalPage" asp-route-id="@Model.PersonalPageDTO.accountDTO.AccountId" asp-route-view="photos" class="w3-button w3-block w3-theme-l1 w3-left-align">
                                <i class="fa fa-picture-o fa-fw w3-margin-right"></i> Photos (@photosDTO.CountPhotos)
                            </a>
                        </div>
                    </div>
                    <br>
                </div>

                <!-- Middle Column -->
                <div class="w3-col m7">

                    @* THỰC HIỆN ADD POST KHI ĐANG Ở TRANG CỦA CHÍNH MÌNH *@
                    @if(isOwnProfile)
                    {
                        <div class="w3-container w3-card w3-white w3-round w3-margin" style="padding: 0">

                                    <div class="wrapper-add-post" style="width: auto">
                                        <div class="post-header">
                                            <a href="#">
                                                <img src="~/image/avatar2.png" alt="Profile Picture">
                                            </a>

                                    <input id="postInput" type="text" placeholder="@Model.PersonalPageDTO.accountDTO.FullName, what are you thinking, today?">
                                        </div>
                                    </div>

                                    <div class="popup" id="popupPost" style="z-index: 100;">
                                        <div class="popup-content">
                                            <button class="close-btn" id="closePopupBtn">×</button>
                                            <h2>Create Post</h2>

                                            <form id="postForm" method="post" asp-action="CreatePost" asp-controller="Post" enctype="multipart/form-data">
                                                <input type="hidden" value="@Model.PersonalPageDTO.accountDTO.AccountId" asp-for="PostViewModel.AccountId">

                                                <textarea asp-for="PostViewModel.ContentPost" placeholder="@Model.PersonalPageDTO.accountDTO.FullName, what are you thinking, today?" class="content-post"
                                                          required></textarea>

                                                <div class="select">
                                                    <label for="select-input">Select Category: </label>
                                                    <select id="select-input" asp-for="PostViewModel.CategoryId">
                                                        <option value="" disabled selected>Select Category</option>
                                                        @foreach (var categoryPost in Model.categoryPosts)
                                                        {
                                                            <option value="@categoryPost.CategoryPostId">@categoryPost.CategoryPostName</option>
                                                        }

                                                    </select>
                                                </div>

                                                <button type="button" id="clearImagesButton" style="display: none;">Delete Image</button>
                                                <div id="imagePreview" style="margin-top: 10px; display: flex; flex-wrap: wrap;"></div>

                                                <input onchange="console.log(this.files)" type="file" id="imageInput" asp-for="PostViewModel.Images" accept="image/*" style="display: none;" multiple>

                                                <div class="actions" style="margin-top: 10px;">
                                                    <button type="button" id="selectImageButton">
                                                        <img src="https://via.placeholder.com/20/00FF00" alt="Photo/Video">Image/Video
                                                    </button>
                                                </div>

                                                <button type="submit"
                                                        style="width: 100%; margin-top: 10px; padding: 10px; background-color: #1877f2; color: white; border: none; border-radius: 5px;">
                                                    Post
                                                </button>
                                            </form>
                                        </div>
                                    </div>

                        </div>
                    }
                    @if (ViewBag.ViewMode == "posts")
                    {
                        <!-- Hiển thị danh sách bài viết -->
                        if (Model.PersonalPageDTO.listPostDTOs.Any())
                        {
                            @foreach (var post in Model.PersonalPageDTO.listPostDTOs)
                            {
                                var imageCount = post.postImages.Count();

                                <div class="w3-container w3-card w3-white w3-round w3-margin">
                                    <br>
                                    <a asp-page="/accountDTO/PersonalPages" asp-route-postid="@post.post.PostId">
                                        <img src="@Model.PersonalPageDTO.accountDTO.Avatar" alt="Avatar" class="w3-left w3-circle w3-margin-right" style="width:60px">
                                    </a>
                                    <div class="w3-right w3-opacity">
                                        <a asp-action="UpdatePost" asp-controller="Post" asp-route-postId="@post.post.PostId" asp-route-accountId="@post.post.AccountId" class="updatePost controlPostBtn">
                                            Update
                                        </a>
                                        <a class="deletePost controlPostBtn" data-postid="@post.post.PostId" data-target="#deletePostModal" data-toggle="modal">Delete</a>
                                    </div>

                                    <div class="activity--header">
                                        <p><a asp-page="/accountDTO/PersonalPage" asp-route-id="@Model.PersonalPageDTO.accountDTO.AccountId">@Model.PersonalPageDTO.accountDTO.FullName</a></p>
                                    </div>
                                    <div class="activity--meta fs--12">
                                        <p><i class="fa mr--8 fa-clock-o"></i>@post.post.CreatedAt</p>
                                    </div>
                                    <br />
                                    <h5 class="m-0">
                                        @post.post.PostContent
                                    </h5>
                                    <hr class="mt-2 mb-2">
                                    <div class="w3-row-padding" style="margin:0 -16px">
                                        <div class="@("image-grid-" + imageCount)">
                                            @foreach (var image in post.postImages)
                                            {
                                                <img src="@image.ImageUrl" alt="@image.ImageUrl" class="">
                                            }
                                        </div>
                                    </div>

                                    <div class="w3-margin-top">
                                        <div class="activity--action fw--700 w3-margin-bottom">
                                            <a asp-controller="Post" asp-action="PostDetail" asp-route-id="@post.post.PostId" class="h5">Read more...</a>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class ="w3-container w3-card w3-white w3-round w3-margin">
                                <h5 class="font-italic text-danger">No posts yet.</h5>
                            </div>
                        }

                        <!-- Modal khi nhấn delete -->
                        <div id="deletePostModal" class="modal fade">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <form>
                                        <div class="modal-header">
                                            <h4 class="modal-title">Delete post</h4>
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                        </div>
                                        <div class="modal-body">
                                            <p>Do you want to delete this post?</p>
                                        </div>
                                        <div class="modal-footer">
                                            <input type="button" class="btn btn-default btnBack" data-dismiss="modal" value="Cancel">
                                            <a id="confirmDeletePost" class="btn btn-danger">Delete</a>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                    else if (ViewBag.ViewMode == "friends")
                    {
                        <!-- Hiển thị danh sách bạn bè -->
                        <div class="w3-container w3-card w3-white w3-round w3-margin">
                            <h4>Friends of @Model.PersonalPageDTO.accountDTO.FullName (@Model.PersonalPageDTO.listFriends.Count())</h4>
                        </div>

                        @if (Model.PersonalPageDTO.listFriends.Any())
                        {
                            <div id="friend-list">
                                @foreach (var friend in Model.PersonalPageDTO.listFriends)
                                {
                                    var friendId = friend.SenderId == Model.PersonalPageDTO.accountDTO.AccountId ? friend.ReceiverId : friend.SenderId;
                                    var friendInfo = await GetSenderInfo(friendId);

                                    <div class="col-md-6 mb-3 friend-item" data-friend-id="@friendId">
                                        <div class="w3-container w3-card w3-white w3-round w3-margin m-0">
                                            <div class="d-flex justify-content-between align-items-center p-2">
                                                <div class="d-flex align-items-center">
                                                    <div class="p-0">
                                                        <a href="/Profile/PersonalPage/@friendId">
                                                            <img src="@(friendInfo?.Avatar ?? "~/image/avatar6.png")" class="img-fluid rounded-circle" style="width: 50px; height: 50px;" />
                                                        </a>
                                                    </div>
                                                    <div class="ms-2">
                                                        <a href="/Profile/PersonalPage/@friendId" class="h6 mb-0" style="font-size: 14px;">
                                                            @(friendInfo?.FullName ?? "Unknown User")
                                                        </a>
                                                        <p class="mb-0 text-muted" style="font-size: 12px;">0 followers</p>
                                                    </div>
                                                </div>
                                                <div>
                                                    @if (accountIDLogin == Model.PersonalPageDTO.accountDTO.AccountId)
                                                    {
                                                        <button type="button" class="btn btn-danger btn-sm unfriend-btn"
                                                                data-user-id1="@accountIDLogin"
                                                                data-user-id2="@friendId"
                                                                style="font-size: 12px; padding: 4px 8px;">
                                                            Unfriend
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-success btn-sm" style="font-size: 12px; padding: 4px 8px;">Followed</button>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="w3-container w3-card w3-white w3-round w3-margin">
                                <h5 class="font-italic text-danger">No friends found.</h5>
                            </div>
                        }
                    }
                    else if (ViewBag.ViewMode == "photos")
                    {
                        <!-- Hiển thị danh sách ảnh -->
                        <div class="w3-container w3-card w3-white w3-round w3-margin">
                            <h4>Photos of @Model.PersonalPageDTO.accountDTO.FullName (@photosDTO.CountPhotos)</h4>
                        </div>

                        @if (photosDTO != null && photosDTO.Photos.Any())
                        {
                            <div class="w3-container w3-card w3-white w3-round w3-margin">
                                @foreach (var photo in photosDTO.Photos)
                                {
                                    <div class="col-md-3 col-sm-6 mb-0 p-1">
                                        <div class="photo-card">
                                            <img src="@photo.ImageUrl" alt="@photo.ImageUrl" class="photo-img" />
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="w3-container w3-card w3-white w3-round w3-margin">
                                <h5 class="font-italic text-danger">No photos found.</h5>
                            </div>
                        }
                    }
                </div>
                <!-- End Middle Column -->
                @functions {
                private async Task<AccountDTO> GetSenderInfo(int senderId)
                {
                    try
                    {
                        using var client = new HttpClient();
                        var contentType = new MediaTypeWithQualityHeaderValue("application/json");
                        client.DefaultRequestHeaders.Accept.Add(contentType);
                        var authenUrl = "http://localhost:5157/api/Accounts";

                        var response = await client.GetAsync($"{authenUrl}/personal-page/{senderId}");
                        if (response.IsSuccessStatusCode)
                        {
                            var content = await response.Content.ReadAsStringAsync();
                            var profile = System.Text.Json.JsonSerializer.Deserialize<PersonalPageDTO>(content, new System.Text.Json.JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    });
                            return profile?.accountDTO;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Error fetching sender info: {ex.Message}");
                    }
                    return null;
                }

                private async Task<AccountPhotosDTO> GetPhotos(int accountId)
                {
                    try
                    {
                        using var client = new HttpClient();
                        var contentType = new MediaTypeWithQualityHeaderValue("application/json");
                        client.DefaultRequestHeaders.Accept.Add(contentType);
                        var authenUrl = "http://localhost:5157/api/Accounts";

                        var response = await client.GetAsync($"{authenUrl}/all-photos/{accountId}");
                        if (response.IsSuccessStatusCode)
                        {
                            var content = await response.Content.ReadAsStringAsync();
                            var photosDTO = System.Text.Json.JsonSerializer.Deserialize<AccountPhotosDTO>(content, new System.Text.Json.JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    });
                            return photosDTO;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Error fetching photos: {ex.Message}");
                    }
                    return null;
                }
            }
            <!-- End Middle Column -->

            <!-- Right Column -->
            <div class="w3-col m2">
                @if (accountIDLogin == Model.PersonalPageDTO.accountDTO.AccountId)
                    {
                        // Nếu vào trang cá nhân của chính mình -> Hiển thị danh sách yêu cầu kết bạn
                        if (Model.PersonalPageDTO.friendRequestReceivers.Count() > 0)
                        {
                            <div class="w3-card w3-round w3-white w3-center" id="friend-requests">
                                <div class="w3-container">
                                    <p>Friend Requests</p>
                                    @foreach (var f in Model.PersonalPageDTO.friendRequestReceivers)
                                    {
                                        var friendId = f.SenderId == accountIDLogin ? f.ReceiverId : f.SenderId;
                                        var friendInfo = await GetSenderInfo(friendId);

                                        <div class="friend-request-item mb-2"
                                             data-request-id="@f.RequestId"
                                             data-friend-id="@friendId"
                                             data-avatar="@(friendInfo?.Avatar ?? "~/image/avatar6.png")"
                                             data-fullname="@(friendInfo?.FullName ?? "Unknown User")">
                                            <div>
                                                <a class="d-flex align-items-center" href="@Url.Action("PersonalPage", "Profile", new { id = friendId })">
                                                    <img src="@(friendInfo?.Avatar ?? "~/image/avatar6.png")" alt="Avatar" class="w-25">
                                                    <span class="p-2">@(friendInfo?.FullName ?? "Unknown User")</span>
                                                </a>
                                            </div>
                                            <div class="w3-row w3-opacity">
                                                <div class="w3-half">
                                                    <button type="button" class="w3-button w3-green w3-section px-3 py-1 request-btn"
                                                            data-sender-id="@f.SenderId"
                                                            data-receiver-id="@f.ReceiverId"
                                                            data-status="accepted" title="Accept">
                                                        <i class="fa fa-check"></i>
                                                    </button>
                                                </div>
                                                <div class="w3-half">
                                                    <button type="button" class="w3-button w3-red w3-section px-3 py-1 request-btn"
                                                            data-sender-id="@f.SenderId"
                                                            data-receiver-id="@f.ReceiverId"
                                                            data-status="rejected" title="Decline">
                                                        <i class="fa fa-remove"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="w3-card w3-round w3-white w3-center" id="friend-list-right">
                                <div class="w3-container">
                                    <p>Friend List</p>
                                    @if (Model.PersonalPageDTO.listFriends.Count() > 0)
                                    {
                                        @foreach (var f in Model.PersonalPageDTO.listFriends.Take(10).Reverse())
                                        {
                                            var friendId = f.SenderId == accountIDLogin ? f.ReceiverId : f.SenderId;
                                            var friendInfo = await GetSenderInfo(friendId);

                                            <div class="mb-2 friend-item" data-friend-id="@friendId">
                                                <a class="d-flex align-items-center" href="@Url.Action("PersonalPage", "Profile", new { id = friendId })">
                                                    <img src="@(friendInfo?.Avatar ?? "~/image/avatar6.png")" alt="Avatar" class="w-25">
                                                    <span class="p-2">@(friendInfo?.FullName ?? "Unknown User")</span>
                                                </a>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p>No friends yet.</p>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="w3-card w3-round w3-white w3-center" id="friend-list-right">
                            <div class="w3-container">
                                <p>Friend List</p>
                                @if (Model.PersonalPageDTO.listFriends.Count() > 0)
                                {
                                    @foreach (var f in Model.PersonalPageDTO.listFriends.Take(10).Reverse())
                                    {
                                        var friendId = f.SenderId == Model.PersonalPageDTO.accountDTO.AccountId ? f.ReceiverId : f.SenderId;
                                        var friendInfo = await GetSenderInfo(friendId);

                                        <div class="mb-2 friend-item" data-friend-id="@friendId">
                                            <a class="d-flex align-items-center" href="@Url.Action("PersonalPage", "Profile", new { id = friendId })">
                                                <img src="@(friendInfo?.Avatar ?? "~/image/avatar6.png")" alt="Avatar" class="w-25">
                                                <span class="p-2">@(friendInfo?.FullName ?? "Unknown User")</span>
                                            </a>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No friends yet.</p>
                                }
                            </div>
                        </div>
                    }

                    <br>

                    <div class="w3-card w3-round w3-white w3-padding-32 w3-center">
                        <p><i class="fa fa-bug w3-xxlarge"></i></p>
                    </div>
                </div>
            <!-- End Grid -->
            </div>

            <!-- End Page Container -->
        </div>
    </div>
}
<div id="success-message" style="display:none;">@TempData["SuccessMessage"]</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            $(".deletePost").click(function () {
                var postId = $(this).data("postid"); // Lấy ID của bài post
                $("#confirmDeletePost").data("postid", postId); // Gán ID vào nút xác nhận

                $('#confirmDeletePost').attr('href', '/Post/DeletePost/' + postId);
                $('#deletePostModal').modal('show');
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var successMessage = document.getElementById('success-message')?.innerText.trim();

            if (successMessage) {
                Swal.fire({
                    title: 'Success!',
                    text: successMessage,
                    icon: 'success',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#3085d6',
                    timer: 3000,
                    timerProgressBar: true
                });
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            // Xử lý nút Add Friend
            $('.send-request-btn').click(function () {
                var senderId = $(this).data('sender-id');
                var receiverId = $(this).data('receiver-id');
                var $button = $(this);

                $.ajax({
                    url: '@Url.Action("SendFriendRequest", "Profile")',
                    type: 'POST',
                    data: { senderId: senderId, receiverId: receiverId },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#3085d6',
                                timer: 2000,
                                timerProgressBar: true
                            });
                            $button.replaceWith('<button class="btn btn-secondary" disabled>Request Sent</button>');
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#d33'
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while sending the friend request.',
                            icon: 'error',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#d33'
                        });
                    }
                });
            });

            // Xử lý nút Accept/Decline
            $('.request-btn').click(function () {
                var senderId = $(this).data('sender-id');
                var receiverId = $(this).data('receiver-id');
                var status = $(this).data('status');
                var $button = $(this);
                var $requestItem = $button.closest('.friend-request-item');
                var friendId = $requestItem.data('friend-id');
                var avatar = $requestItem.data('avatar');
                var fullName = $requestItem.data('fullname');

                $.ajax({
                    url: '@Url.Action("UpdateFriendRequest", "Profile")',
                    type: 'POST',
                    data: { senderId: senderId, receiverId: receiverId, status: status },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: status === 'accepted' ? 'Friend Added!' : 'Request Declined!',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#3085d6',
                                timer: 2000,
                                timerProgressBar: true
                            });
                            if (status === 'accepted') {
                                // Thêm bạn bè vào danh sách bạn bè (Right Column và Middle Column)
                                var friendHtml = `
                                    <div class="mb-2 friend-item" data-friend-id="${friendId}">
                                        <a class="d-flex align-items-center" href="/Profile/PersonalPage/${friendId}">
                                            <img src="${avatar}" alt="Avatar" class="w-25">
                                            <span class="p-2">${fullName}</span>
                                        </a>
                                    </div>`;
                                $('#friend-list-right .w3-container').append(friendHtml);

                                if ($('#friend-list').length) {
                                    var friendItemHtml = `
                                        <div class="col-md-6 mb-3 friend-item" data-friend-id="${friendId}">
                                            <div class="w3-container w3-card w3-white w3-round w3-margin m-0">
                                                <div class="d-flex justify-content-between align-items-center p-2">
                                                    <div class="d-flex align-items-center">
                                                        <div class="p-0">
                                                            <a href="/Profile/PersonalPage/${friendId}">
                                                                <img src="${avatar}" class="img-fluid rounded-circle" style="width: 50px; height: 50px;" />
                                                            </a>
                                                        </div>
                                                        <div class="ms-2">
                                                            <a href="/Profile/PersonalPage/${friendId}" class="h6 mb-0" style="font-size: 14px;">
                                                                ${fullName}
                                                            </a>
                                                            <p class="mb-0 text-muted" style="font-size: 12px;">0 followers</p>
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <button type="button" class="btn btn-danger btn-sm unfriend-btn"
                                                                data-user-id1="@accountIDLogin"
                                                                data-user-id2="${friendId}"
                                                                style="font-size: 12px; padding: 4px 8px;">
                                                            Unfriend
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>`;
                                    $('#friend-list').append(friendItemHtml);
                                }

                                // Cập nhật nút trong Left Column
                                $('#friend-action-buttons').html(`
                                    <button type="button" class="btn btn-danger unfriend-btn"
                                            data-user-id1="@accountIDLogin"
                                            data-user-id2="${friendId}">
                                        Unfriend
                                    </button>
                                `);
                            }
                            $button.closest('.friend-request-item').fadeOut();
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#d33'
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while processing the request.',
                            icon: 'error',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#d33'
                        });
                    }
                });
            });

            // Xử lý nút Unfriend
            $(document).on('click', '.unfriend-btn', function () {
                var userId1 = $(this).data('user-id1');
                var userId2 = $(this).data('user-id2');
                var $button = $(this);

                console.log('Unfriend button clicked:', { userId1, userId2 });
                console.log('Current #friend-action-buttons content:', $('#friend-action-buttons').html());

                $.ajax({
                    url: '@Url.Action("Unfriend", "Profile")',
                    type: 'POST',
                    data: { userId1: userId1, userId2: userId2 },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Friend Removed!',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#3085d6',
                                timer: 2000,
                                timerProgressBar: true
                            });

                            // Xóa bạn bè khỏi danh sách (Right Column và Middle Column)
                            $(`.friend-item[data-friend-id="${userId2}"]`).fadeOut();

                            // Cập nhật nút trong Left Column
                            var newButtonHtml = `
                                <button type="button" class="btn btn-primary send-request-btn"
                                        data-sender-id="${userId1}"
                                        data-receiver-id="${userId2}">
                                    Add Friend
                                </button>
                            `;
                            $('#friend-action-buttons').html(newButtonHtml);

                            console.log('Updated #friend-action-buttons content:', $('#friend-action-buttons').html());
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#d33'
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while unfriending.',
                            icon: 'error',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#d33'
                        });
                    }
                });
            });
        });
    </script>
}

